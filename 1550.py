{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['ID', 'name', 'category', 'main_category', 'currency', 'deadline',\n",
       "       'goal', 'launched', 'pledged', 'state', 'backers', 'country',\n",
       "       'usd pledged', 'usd_pledged_real', 'usd_goal_real'], dtype=object)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=pd.read_csv(\"ks-projects-201801.csv\")\n",
    "data\n",
    "data.columns.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              0.00\n",
       "1           2421.00\n",
       "2            220.00\n",
       "3              1.00\n",
       "4           1283.00\n",
       "5          52375.00\n",
       "6           1205.00\n",
       "7            453.00\n",
       "8           8233.00\n",
       "9           6240.57\n",
       "10             0.00\n",
       "11         12700.00\n",
       "12             0.00\n",
       "13             0.00\n",
       "14        121857.33\n",
       "15           664.00\n",
       "16           395.00\n",
       "17           789.00\n",
       "18           250.00\n",
       "19          1781.00\n",
       "20         34268.00\n",
       "21             0.81\n",
       "22           650.00\n",
       "23             6.29\n",
       "24           701.66\n",
       "25         15827.00\n",
       "26             0.00\n",
       "27         42174.03\n",
       "28           160.60\n",
       "29         57577.31\n",
       "            ...    \n",
       "378631     13861.50\n",
       "378632         0.00\n",
       "378633     11643.00\n",
       "378634      3531.00\n",
       "378635        70.00\n",
       "378636      4686.96\n",
       "378637     10245.00\n",
       "378638        18.00\n",
       "378639      5579.00\n",
       "378640       100.00\n",
       "378641         0.00\n",
       "378642      1452.47\n",
       "378643         0.00\n",
       "378644      6169.00\n",
       "378645      4374.99\n",
       "378646      1732.02\n",
       "378647       980.00\n",
       "378648       121.00\n",
       "378649       135.00\n",
       "378650         0.00\n",
       "378651      4983.69\n",
       "378652      2875.83\n",
       "378653        25.00\n",
       "378654       154.00\n",
       "378655         0.00\n",
       "378656        25.00\n",
       "378657       155.00\n",
       "378658        20.00\n",
       "378659       200.00\n",
       "378660       524.00\n",
       "Name: usd_pledged_real, Length: 378661, dtype: float64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[\"usd_pledged_real\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9058.92407411907"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[\"usd_pledged_real\"].mean()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "90973.34310726382"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[\"usd_pledged_real\"].std()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count    3.786610e+05\n",
       "mean     9.058924e+03\n",
       "std      9.097334e+04\n",
       "min      0.000000e+00\n",
       "25%      3.100000e+01\n",
       "50%      6.243300e+02\n",
       "75%      4.050000e+03\n",
       "max      2.033899e+07\n",
       "Name: usd_pledged_real, dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data[\"usd_pledged_real\"].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>goal</th>\n",
       "      <th>pledged</th>\n",
       "      <th>backers</th>\n",
       "      <th>usd pledged</th>\n",
       "      <th>usd_pledged_real</th>\n",
       "      <th>usd_goal_real</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>3.786610e+05</td>\n",
       "      <td>3.786610e+05</td>\n",
       "      <td>3.786610e+05</td>\n",
       "      <td>378661.000000</td>\n",
       "      <td>3.748640e+05</td>\n",
       "      <td>3.786610e+05</td>\n",
       "      <td>3.786610e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>1.074731e+09</td>\n",
       "      <td>4.908079e+04</td>\n",
       "      <td>9.682979e+03</td>\n",
       "      <td>105.617476</td>\n",
       "      <td>7.036729e+03</td>\n",
       "      <td>9.058924e+03</td>\n",
       "      <td>4.545440e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.190862e+08</td>\n",
       "      <td>1.183391e+06</td>\n",
       "      <td>9.563601e+04</td>\n",
       "      <td>907.185035</td>\n",
       "      <td>7.863975e+04</td>\n",
       "      <td>9.097334e+04</td>\n",
       "      <td>1.152950e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>5.971000e+03</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.000000e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>5.382635e+08</td>\n",
       "      <td>2.000000e+03</td>\n",
       "      <td>3.000000e+01</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.698000e+01</td>\n",
       "      <td>3.100000e+01</td>\n",
       "      <td>2.000000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>1.075276e+09</td>\n",
       "      <td>5.200000e+03</td>\n",
       "      <td>6.200000e+02</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>3.947200e+02</td>\n",
       "      <td>6.243300e+02</td>\n",
       "      <td>5.500000e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.610149e+09</td>\n",
       "      <td>1.600000e+04</td>\n",
       "      <td>4.076000e+03</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>3.034090e+03</td>\n",
       "      <td>4.050000e+03</td>\n",
       "      <td>1.550000e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2.147476e+09</td>\n",
       "      <td>1.000000e+08</td>\n",
       "      <td>2.033899e+07</td>\n",
       "      <td>219382.000000</td>\n",
       "      <td>2.033899e+07</td>\n",
       "      <td>2.033899e+07</td>\n",
       "      <td>1.663614e+08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 ID          goal       pledged        backers   usd pledged  \\\n",
       "count  3.786610e+05  3.786610e+05  3.786610e+05  378661.000000  3.748640e+05   \n",
       "mean   1.074731e+09  4.908079e+04  9.682979e+03     105.617476  7.036729e+03   \n",
       "std    6.190862e+08  1.183391e+06  9.563601e+04     907.185035  7.863975e+04   \n",
       "min    5.971000e+03  1.000000e-02  0.000000e+00       0.000000  0.000000e+00   \n",
       "25%    5.382635e+08  2.000000e+03  3.000000e+01       2.000000  1.698000e+01   \n",
       "50%    1.075276e+09  5.200000e+03  6.200000e+02      12.000000  3.947200e+02   \n",
       "75%    1.610149e+09  1.600000e+04  4.076000e+03      56.000000  3.034090e+03   \n",
       "max    2.147476e+09  1.000000e+08  2.033899e+07  219382.000000  2.033899e+07   \n",
       "\n",
       "       usd_pledged_real  usd_goal_real  \n",
       "count      3.786610e+05   3.786610e+05  \n",
       "mean       9.058924e+03   4.545440e+04  \n",
       "std        9.097334e+04   1.152950e+06  \n",
       "min        0.000000e+00   1.000000e-02  \n",
       "25%        3.100000e+01   2.000000e+03  \n",
       "50%        6.243300e+02   5.500000e+03  \n",
       "75%        4.050000e+03   1.550000e+04  \n",
       "max        2.033899e+07   1.663614e+08  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "data2=data.loc[:,[\"category\",\"usd_pledged_real\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fc14ee50e48>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data3=data2.groupby(by=\"category\").sum()\n",
    "\n",
    "data3.plot.line(color=\"blue\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>usd_pledged_real</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>category</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3D Printing</th>\n",
       "      <td>4.529920e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Academic</th>\n",
       "      <td>2.648169e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Accessories</th>\n",
       "      <td>2.065572e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Action</th>\n",
       "      <td>2.737575e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animals</th>\n",
       "      <td>7.635236e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Animation</th>\n",
       "      <td>2.527167e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Anthologies</th>\n",
       "      <td>7.723628e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Apparel</th>\n",
       "      <td>3.915006e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Apps</th>\n",
       "      <td>1.040834e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Architecture</th>\n",
       "      <td>4.867253e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Art</th>\n",
       "      <td>2.957298e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Art Books</th>\n",
       "      <td>2.388385e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Audio</th>\n",
       "      <td>1.446415e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bacon</th>\n",
       "      <td>3.111150e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Blues</th>\n",
       "      <td>1.071763e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Calendars</th>\n",
       "      <td>1.274056e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Camera Equipment</th>\n",
       "      <td>3.384673e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Candles</th>\n",
       "      <td>2.418885e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ceramics</th>\n",
       "      <td>1.435291e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Children's Books</th>\n",
       "      <td>2.396554e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Childrenswear</th>\n",
       "      <td>1.683263e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chiptune</th>\n",
       "      <td>6.192034e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Civic Design</th>\n",
       "      <td>3.315001e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Classical Music</th>\n",
       "      <td>1.207716e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comedy</th>\n",
       "      <td>1.413637e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comic Books</th>\n",
       "      <td>9.363058e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Comics</th>\n",
       "      <td>3.265802e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Community Gardens</th>\n",
       "      <td>4.779297e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Conceptual Art</th>\n",
       "      <td>1.676039e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cookbooks</th>\n",
       "      <td>3.127212e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Shorts</th>\n",
       "      <td>4.154866e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Small Batch</th>\n",
       "      <td>7.117010e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Software</th>\n",
       "      <td>1.177727e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sound</th>\n",
       "      <td>4.139655e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Space Exploration</th>\n",
       "      <td>9.887444e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Spaces</th>\n",
       "      <td>6.329404e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Stationery</th>\n",
       "      <td>3.757105e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Tabletop Games</th>\n",
       "      <td>4.637330e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Taxidermy</th>\n",
       "      <td>3.817699e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Technology</th>\n",
       "      <td>1.421375e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Television</th>\n",
       "      <td>8.943189e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Textiles</th>\n",
       "      <td>5.679786e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Theater</th>\n",
       "      <td>2.802556e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thrillers</th>\n",
       "      <td>3.195625e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Translations</th>\n",
       "      <td>3.663012e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Typography</th>\n",
       "      <td>2.296488e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vegan</th>\n",
       "      <td>3.384245e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Video</th>\n",
       "      <td>6.943563e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Video Art</th>\n",
       "      <td>5.412941e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Video Games</th>\n",
       "      <td>2.162537e+08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wearables</th>\n",
       "      <td>6.939940e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Weaving</th>\n",
       "      <td>4.667587e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Web</th>\n",
       "      <td>1.424993e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Webcomics</th>\n",
       "      <td>8.197969e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Webseries</th>\n",
       "      <td>2.340025e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Woodworking</th>\n",
       "      <td>1.866890e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Workshops</th>\n",
       "      <td>2.728950e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>World Music</th>\n",
       "      <td>8.827551e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Young Adult</th>\n",
       "      <td>1.032010e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Zines</th>\n",
       "      <td>1.015042e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>159 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   usd_pledged_real\n",
       "category                           \n",
       "3D Printing            4.529920e+07\n",
       "Academic               2.648169e+06\n",
       "Accessories            2.065572e+07\n",
       "Action                 2.737575e+06\n",
       "Animals                7.635236e+05\n",
       "Animation              2.527167e+07\n",
       "Anthologies            7.723628e+06\n",
       "Apparel                3.915006e+07\n",
       "Apps                   1.040834e+07\n",
       "Architecture           4.867253e+06\n",
       "Art                    2.957298e+07\n",
       "Art Books              2.388385e+07\n",
       "Audio                  1.446415e+06\n",
       "Bacon                  3.111150e+05\n",
       "Blues                  1.071763e+06\n",
       "Calendars              1.274056e+06\n",
       "Camera Equipment       3.384673e+07\n",
       "Candles                2.418885e+05\n",
       "Ceramics               1.435291e+06\n",
       "Children's Books       2.396554e+07\n",
       "Childrenswear          1.683263e+06\n",
       "Chiptune               6.192034e+05\n",
       "Civic Design           3.315001e+06\n",
       "Classical Music        1.207716e+07\n",
       "Comedy                 1.413637e+07\n",
       "Comic Books            9.363058e+06\n",
       "Comics                 3.265802e+07\n",
       "Community Gardens      4.779297e+05\n",
       "Conceptual Art         1.676039e+06\n",
       "Cookbooks              3.127212e+06\n",
       "...                             ...\n",
       "Shorts                 4.154866e+07\n",
       "Small Batch            7.117010e+06\n",
       "Software               1.177727e+07\n",
       "Sound                  4.139655e+07\n",
       "Space Exploration      9.887444e+06\n",
       "Spaces                 6.329404e+06\n",
       "Stationery             3.757105e+05\n",
       "Tabletop Games         4.637330e+08\n",
       "Taxidermy              3.817699e+04\n",
       "Technology             1.421375e+08\n",
       "Television             8.943189e+06\n",
       "Textiles               5.679786e+05\n",
       "Theater                2.802556e+07\n",
       "Thrillers              3.195625e+06\n",
       "Translations           3.663012e+05\n",
       "Typography             2.296488e+06\n",
       "Vegan                  3.384245e+06\n",
       "Video                  6.943563e+05\n",
       "Video Art              5.412941e+05\n",
       "Video Games            2.162537e+08\n",
       "Wearables              6.939940e+07\n",
       "Weaving                4.667587e+05\n",
       "Web                    1.424993e+07\n",
       "Webcomics              8.197969e+06\n",
       "Webseries              2.340025e+07\n",
       "Woodworking            1.866890e+06\n",
       "Workshops              2.728950e+05\n",
       "World Music            8.827551e+06\n",
       "Young Adult            1.032010e+06\n",
       "Zines                  1.015042e+06\n",
       "\n",
       "[159 rows x 1 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                     int64\n",
       "name                  object\n",
       "category            category\n",
       "main_category         object\n",
       "currency              object\n",
       "deadline              object\n",
       "goal                 float64\n",
       "launched              object\n",
       "pledged              float64\n",
       "state                 object\n",
       "backers                int64\n",
       "country               object\n",
       "usd pledged          float64\n",
       "usd_pledged_real     float64\n",
       "usd_goal_real        float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "data[\"category\"]=pd.Categorical(data[\"category\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'Categorical' object has no attribute 'dtypes'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-36-da9dbf69b67f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdata2\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtypes\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mAttributeError\u001b[0m: 'Categorical' object has no attribute 'dtypes'"
     ]
    }
   ],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv",
   "language": "python",
   "name": "venv"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
